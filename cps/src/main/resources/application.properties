#spring
spring.application.name=${APPLICATION_NAME}
server.port=${PORT:7070}
spring.profiles.active=${ENV}
spring.jpa.open-in-view=false
spring.jmx.enabled=true
# tomcat
server.tomcat.mbeanregistry.enabled=true
#mysql
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.initializationFailTimeout=1000
spring.datasource.maximumPoolSize=${DB_MYSQL_MAX_POOL:1}
spring.datasource.minIdle=${DB_MYSQL_MIN_POOL:1}
spring.datasource.validationQuery=SELECT 1
spring.datasource.idleTimeout=1800000
spring.datasource.maxLifetime=3600000
spring.datasource.connectionTimeout=15000
spring.datasource.url=${DB_MYSQL_HOST}
spring.datasource.username=${DB_MYSQL_USERNAME}
spring.datasource.password=${DB_MYSQL_PASSWORD}
hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
hibernate.show_sql=false
#redis
redis.host=${REDIS_HOST}
redis.port=${REDIS_PORT:6379}
redis.command.timeout=${REDIS_COMMAND_TIMEOUT}
redis.shutdown.timeout=${REDIS_SHUTDOWN_TIMEOUT}
redis.client.name=cps
redis.updated_campaign_catalogs_set.partition_count=${REDIS_UPDATED_CAMPAIGN_CATALOGS_SET_PARTITION_COUNT:1}
redis.updated_campaign_catalogs_set.batch_size=${REDIS_UPDATED_CAMPAIGN_CATALOGS_SET_BATCH_SIZE:100}
#hbase
hbase.zookeeper.host=${HBASE_ZOOKEEPER_HOST}
hbase.zookeeper.port=2181
hbase.zookeeper.recovery.retries=1
hbase.client.pause=1000
hbase.client.retries=3
hbase.rpc.timeout=15000
#redshift
redshift.url=${REDSHIFT_URL}
redshift.username=${REDSHIFT_USERNAME}
redshift.password=${REDSHIFT_PASSWORD}
auth.tokens=${AUTH_TOKENS}
#logging
log_disabled_paths=swagger,api-docs,csrf,health
#cronitor
cron.cronitor.url=https://cronitor.link/
#rest
api.default.connect.timeout.ms=${API_DEFAULT_CONNECT_TIMEOUT_MS:2000}
api.default.read.timeout.ms=${API_DEFAULT_READ_TIMEOUT_MS:2000}

#AD Service config
rest-client.ad-service.host=${AD_SERVICE_HOST}
rest-client.ad-service.port=${AD_SERVICE_PORT}
rest-client.ad-service.secret=${AD_SERVICE_SECRET}
rest-client.ad-service.http-config.max-per-route=${AD_HTTP_MAX_PER_ROUTE}
rest-client.ad-service.http-config.max-total=${AD_HTTP_MAX_TOTAL}
rest-client.ad-service.http-config.connect-timeout=${AD_HTTP_CONNECT_TIMEOUT}
rest-client.ad-service.http-config.socket-timeout=${AD_HTTP_SOCKET_TIMEOUT}
rest-client.ad-service.http-config.connection-request-timeout=${AD_HTTP_CONN_REQUEST_TIMEOUT}
#Prism Service config
rest-client.prism-service.host=${PRISM_SERVICE_HOST}
rest-client.prism-service.username=${PRISM_SERVICE_USERNAME}
rest-client.prism-service.secret=${PRISM_SERVICE_SECRET}
rest-client.prism-service.http-config.max-per-route=${PRISM_HTTP_MAX_PER_ROUTE}
rest-client.prism-service.http-config.max-total=${PRISM_HTTP_MAX_TOTAL}
rest-client.prism-service.http-config.connect-timeout=${PRISM_HTTP_CONNECT_TIMEOUT}
rest-client.prism-service.http-config.socket-timeout=${PRISM_HTTP_SOCKET_TIMEOUT}
rest-client.prism-service.http-config.connection-request-timeout=${PRISM_HTTP_CONN_REQUEST_TIMEOUT}
#campaign performance redshift
scheduler.campaign.performance.enable=${SCHEDULER_CAMPAIGN_PERFORMANCE_ENABLE:{'IN':false}}
scheduler.campaign.performance.monitor.code=${SCHEDULER_CAMPAIGN_PERFORMANCE_MONITOR_CODE:{'IN':'b2B0oA'}}
scheduler.campaign.performance.cron.expression=${SCHEDULER_CAMPAIGN_PERFORMANCE_CRON_EXPRESSION:{'IN':'0 */10 * * * ?'}}
scheduler.campaign.performance.batch.size=${SCHEDULER_CAMPAIGN_PERFORMANCE_BATCH_SIZE:{'IN':1}}
scheduler.campaign.performance.process.batch.size=${SCHEDULER_CAMPAIGN_PERFORMANCE_PROCESS_BATCH_SIZE:{'IN':1}}
#ads deduction campaign supplier redshift scheduler
scheduler.ads.deduction.campaign.supplier.enable=${SCHEDULER_ADS_DEDUCTION_CAMPAIGN_ENABLE:{'IN':false}}
scheduler.ads.deduction.campaign.supplier.monitor.code=${SCHEDULER_ADS_DEDUCTION_CAMPAIGN_MONITOR_CODE:{'IN':'b2B0oA'}}
scheduler.ads.deduction.campaign.supplier.cron.expression=${SCHEDULER_ADS_DEDUCTION_CAMPAIGN_CRON_EXPRESSION:{'IN':'*/20 * * * * ?'}}
scheduler.ads.deduction.campaign.supplier.batch.size=${SCHEDULER_ADS_DEDUCTION_CAMPAIGN_BATCH_SIZE:{'IN':1}}
scheduler.ads.deduction.campaign.supplier.process.batch.size=${SCHEDULER_ADS_DEDUCTION_CAMPAIGN_PROCESS_BATCH_SIZE:{'IN':300}}
#real estate metadata cache sync scheduler
scheduler.real_estate_metadata.cache.sync.enable=${SCHEDULER_REAL_ESTATE_METADATA_CACHE_SYNC_ENABLE:{'IN':false}}
scheduler.real_estate_metadata.cache.sync.monitor.code=${SCHEDULER_REAL_ESTATE_METADATA_CACHE_SYNC_MONITOR_CODE:{'IN':'b2B0oA'}}
scheduler.real_estate_metadata.cache.sync.cron.expression=${SCHEDULER_REAL_ESTATE_METADATA_CACHE_SYNC_CRON_EXPRESSION:{'IN':'0 */10 * * * ?'}}
scheduler.real_estate_metadata.cache.sync.batch.size=${SCHEDULER_REAL_ESTATE_METADATA_CACHE_SYNC_BATCH_SIZE:{'IN':1}}
scheduler.real_estate_metadata.cache.sync.process.batch.size=${SCHEDULER_REAL_ESTATE_METADATA_CACHE_SYNC_PROCESS_BATCH_SIZE:{'IN':10}}
#campaign performance hbase ES sync scheduler
scheduler.campaign_performance_es_indexing.enable=${SCHEDULER_CAMPAIGN_PERFORMANCE_ES_INDEXING_ENABLE:{'IN':false}}
scheduler.campaign_performance_es_indexing.monitor.code=${SCHEDULER_CAMPAIGN_PERFORMANCE_ES_INDEXING_MONITOR_CODE:{'IN':'b2B0oA'}}
scheduler.campaign_performance_es_indexing.cron.expression=${SCHEDULER_CAMPAIGN_PERFORMANCE_ES_INDEXING_CRON_EXPRESSION:{'IN':'0 */10 * * * ?'}}
scheduler.campaign_performance_es_indexing.batch.size=${SCHEDULER_CAMPAIGN_PERFORMANCE_ES_INDEXING_BATCH_SIZE:{'IN':1}}

daily_budget_reset_time=${DAILY_BUDGET_RESET_TIME:00:00:00}
user_catalog_interaction_ttl_seconds=${USER_CATALOG_INTERACTION_TTL_SECONDS:21600}
user_catalog_interaction_window_in_seconds=${USER_CATALOG_INTERACTION_WINDOW_IN_SECONDS:30}
#campaign-catalog-update consumer
campaign-catalog-update.consumer.start=${CAMPAIGN_CATALOG_UPDATE_CONSUMER_START:true}
campaign-catalog-update.consumer.concurrency=${CAMPAIGN_CATALOG_UPDATE_CONSUMER_CONCURRENCY:1}
campaign-catalog-update.consumer.max.poll.interval.ms=3600000
campaign-catalog-update.consumer.batch.size=${CAMPAIGN_CATALOG_UPDATE_CONSUMER_BATCH_SIZE:10}
#ingestion-interaction-event
ingestion.interaction.event.consumer.topics=${INGESTION_INTERACTION_EVENT_TOPICS:ad_click,ad_shared,ad_wishlisted}
ingestion.interaction.event.consumer.start=${INGESTION_INTERACTION_EVENT_CONSUMER_START:true}
ingestion.interaction.event.consumer.concurrency=${INGESTION_INTERACTION_EVENT_CONSUMER_CONCURRENCY:1}
ingestion.interaction.event.consumer.max.poll.interval.ms=120000
ingestion.interaction.event.consumer.batch.size=${INGESTION_INTERACTION_EVENT_CONSUMER_BATCH_SIZE:10}
#ingestion-view-event
ingestion.view.event.consumer.topics=${INGESTION_VIEW_EVENT_TOPICS:rt_ad_view}
ingestion.view.event.consumer.start=${INGESTION_VIEW_EVENT_CONSUMER_START:true}
ingestion.view.event.consumer.concurrency=${INGESTION_VIEW_EVENT_CONSUMER_CONCURRENCY:1}
ingestion.view.event.consumer.max.poll.interval.ms=300000
ingestion.view.event.consumer.batch.size=${INGESTION_VIEW_EVENT_CONSUMER_BATCH_SIZE:10}
#interaction-event consumer
interaction.event.consumer.start=${INTERACTION_EVENT_CONSUMER_START:true}
interaction.event.consumer.concurrency=${INTERACTION_EVENT_CONSUMER_CONCURRENCY:1}
interaction.event.consumer.max.poll.interval.ms=120000
interaction.event.consumer.batch.size=${INTERACTION_EVENT_CONSUMER_BATCH_SIZE:10}
#delayed retry consumer
delayed-retry.consumer.start=${DELAYED_RETRY_CONSUMER_START:true}
delayed-retry.consumer.concurrency=${DELAYED_RETRY_CONSUMER_CONCURRENCY:1}
delayed-retry.consumer.max.poll.interval.ms=600000
delayed-retry.consumer.batch.size=${DELAYED_RETRY_CONSUMER_BATCH_SIZE:50}
#dayWise performance event consumer
dayWisePerf.event.consumer.start=${DAY_PERF_EVENTS_CONSUMER_START:true}
dayWisePerf.event.consumer.concurrency=${DAY_PERF_EVENTS_CONSUMER_CONCURRENCY:1}
dayWisePerf.event.consumer.max.poll.interval.ms=600000
dayWisePerf.event.consumer.batch.size=${DAY_PERF_EVENTS_CONSUMER_BATCH_SIZE:50}

common.bootstrap.servers=${COMMON_BOOTSTRAP_SERVERS}
ingestion.bootstrap.servers=${INGESTION_BOOTSTRAP_SERVERS}
ingestion.consumer.avro.schema.registry.url=${CLICK_EVENT_CONSUMER_AVRO_SCHEMA_REGISTRY_URL:http://bac-s-ingestion-schema.internal.meeshotest.in}

increment_view_hbase_batch_size=${INCREMENT_VIEW_BATCH_SIZE:5}
cache.ads.campaign.catalog.elements=${CACHE_ADS_CAMPAIGN_CATALOG_ELEMENTS:10000}
cache.ads.campaign.catalog.seconds=${CACHE_ADS_CAMPAIGN_CATALOG_SECONDS:300}
ad_service_fetch_ccm_batch_size=${AD_SERVICE_FETCH_CCM_BATCH_SIZE:20}

## elastic search configurations
elasticsearch.host=${ES_HOST}
elasticsearch.port=443
elasticsearch.host.scheme=https
elasticsearch.connect.timeout.ms=${ES_CONNECT_TIMEOUT_MS:200}
elasticsearch.socket.timeout.ms=${ES_SOCKET_TIMEOUT_MS:500}
elasticsearch.ioreactor.connections.count=${ES_CONNECTIONS:16}
elasticsearch.http-pool.max-per-route=${ES_CONN_MAX_PER_ROUTE:30}
elasticsearch.http-pool.max-total=${ES_CONN_MAX_PER_ROUTE:30}

es.campaign.catalog.month-wise.indices=${ES_CAMPAIGN_CATALOG_MONTH_WISE:cc_monthly}
es.campaign.catalog.date-wise.indices=${ES_CAMPAIGN_CATALOG_DATE_WISE:cc_daily}

campaign.date-wise.metrics.batch-size=${CAMPAIGN_DATE_WISE_METRICS_BATCH_SIZE:10}
campaign.date-wise.metrics.reference-date=${CAMPAIGN_DATE_WISE_METRICS_REFERENCE_DATE:2021-11-22}
backfill.date-wise.metrics.prism.batch-size = ${BACKFILL_DATE_WISE_METRICS_PRISM_BATCH_SIZE:20}

#PAYOUT KAFKA SERVERS
payout.bootstrap.servers = ${PAYOUT_BOOTSTRAP_SERVERS:kafka.demandqa.internal.meeshotest.in:9092}